# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
DISABLE_AUTO_UPDATE="true"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"
ZSH_THEME=powerlevel10k/powerlevel10k

POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(history)
POWERLEVEL9K_SHORTEN_DIR_LENGTH=1

ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern root line)
ZSH_HIGHLIGHT_PATTERNS=('rm -rf *' 'fg=white,bold,bg=red')

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#plugins=(git)
VI_MODE_SET_CURSOR=true
#plugins=(zsh-autosuggestions zsh-syntax-highlighting vi-mode sudo)
#plugins=(zsh-autosuggestions zsh-syntax-highlighting vi-mode)
#plugins=(zsh-autosuggestions zsh-syntax-highlighting zsh-vi-mode)
plugins=(fzf-tab zsh-autosuggestions zsh-syntax-highlighting vi-mode istioctl)

fpath+=${ZDOTDIR:-~}/.zsh_functions

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8


# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

bindkey -v
set -o vi

export HISTFILE=~/.zsh_history
export HISTFILESIZE=1000000000
export HISTSIZE=1000000000
setopt INC_APPEND_HISTORY
export HISTTIMEFORMAT="[%F %T] "
setopt EXTENDED_HISTORY
setopt HIST_FIND_NO_DUPS

vi-search-fix() {
zle vi-cmd-mode
zle .vi-history-search-backward
}

autoload vi-search-fix
zle -N vi-search-fix
bindkey -M viins '\e/' vi-search-fix

alias vi="lvim"
#alias k="kubectl"
alias k="kubecolor"
alias kubectl="kubecolor"
alias kn="kubectl neat"
alias bcat="bat --color --style=numbers,header"
#alias bcat="bat --show-all"
#alias diff="delta"
alias ll="exa -l --icons -snew"

eval "$(direnv hook zsh)"

export KEYTIMEOUT=1

bindkey '\e\e[C' forward-word
bindkey '\e\e[D' backward-word

export PATH="$HOME/.local/bin:$PATH"

export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
# this will only be included on linux 
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

export GETMESH_HOME="$HOME/.getmesh"
export PATH="$GETMESH_HOME/bin:$PATH"

export PATH="$PATH:$HOME/.tctl/bin"

export PATH="$HOME/.gobrew/current/bin:$HOME/.gobrew/bin:$PATH"
export GOROOT="$HOME/.gobrew/current/go"

eval "$( command rapture shell-init )"

export USE_GKE_GCLOUD_AUTH_PLUGIN=True
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

source <(kubectl completion zsh)
compdef kubecolor=kubectl
source <(flux completion zsh)
#source ~/.config/istio/_istioctl
#tctl completion zsh > "${fpath[1]}/_tctl"
source <(stern --completion=zsh)
source <(kubectl istiolog completion zsh)
source <(helm completion zsh)

#source $HOME/.config/zsh-abbrev-alias/abbrev-alias.plugin.zsh
#abbrev-alias -c ka='kubectl apply -f'

ENABLE_CORRECTION="true"

alias ctags="/snap/bin/ctags"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR=~/.local/bin/lvim
else
  export EDITOR=~/.local/bin/lvim
fi

###### BEGIN FZF ###################
#source /usr/local/share/fzf/examples/key-bindings.zsh
#source /usr/local/share/fzf/examples/completion.zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Setting fd as the default source for fzf
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git --exclude .cache --exclude cache --exclude .vim --exclude Slack --exclude Workstation --exclude archived --exclude .oh-my-zsh --exclude .tmux --exclude Downloads --exclude flatpak'

## To apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"


export FZF_DEFAULT_OPTS='--height 40% --layout=reverse'

# Use ~~ as the trigger sequence instead of the default **
export FZF_COMPLETION_TRIGGER='~~'

# Options to fzf command
export FZF_COMPLETION_OPTS='--border --info=inline'

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# (EXPERIMENTAL) Advanced customization of fzf options via _fzf_comprun function
## - The first argument to the function is the name of the command.
## - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf "$@" --preview 'tree -C {} | head -200' ;;
    export|unset) fzf "$@" --preview "eval 'echo \$'{}" ;;
    ssh)          fzf "$@" --preview 'dig {}' ;;
    *)            fzf "$@" ;;
  esac
}
######### END FZF ##########################3

######
# fzf-tab
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
zstyle ':fzf-tab:complete:ls:*' fzf-preview 'exa -1 --color=always $realpath'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'
# systemctl
zstyle ':fzf-tab:complete:systemctl-*:*' fzf-preview 'SYSTEMD_COLORS=1 systemctl status $word'
# show file, dir, etc contents
zstyle ':fzf-tab:complete:*:*' fzf-preview 'less ${(Q)realpath}'
export LESSOPEN='|~/.lessfilter %s'
zstyle ':fzf-tab:complete:*:options' fzf-preview 
zstyle ':fzf-tab:complete:*:argument-1' fzf-preview
#########
pods() {
  FZF_DEFAULT_COMMAND="kubectl get pods" \
    fzf --info=inline --layout=reverse --header-lines=1 --height=80%\
        --prompt "$(kubectl config current-context | sed 's/-context$//')> " \
        --header $'/ CTRL-e (kubectl edit) ╱ Enter (kubectl exec) ╱ CTRL-o (open log in editor) ╱ CTRL-r (reload) ╱\n\n' \
        --bind 'ctrl-p:change-preview-window(80%,border-bottom|hidden|)' \
        --bind 'ctrl-e:execute:kubectl edit pod {1} > /dev/tty' \
        --bind 'enter:execute:kubectl exec -it {1} -- bash > /dev/tty' \
        #--bind 'ctrl-o:execute:${EDITOR:-vim} <(kubectl logs --all-containers {1} ) > /dev/tty' \
        --bind 'ctrl-o:execute:${EDITOR:-bat} <(kubectl logs --all-containers {1} ) > /dev/tty' \
        --bind 'ctrl-r:reload:kubectl get pods' \
        --preview-window up:follow \
        --preview 'kubectl logs --follow --all-containers --tail=10000 {1} ' "$@"
}

secrets() {
  TEMPLATE="'{{range \$k,\$v := .data}}{{\"### \"}}{{\$k}}{{\"\n\"}}{{\$v|base64decode}}{{\"\n\n\"}}{{end}}'" \
  FZF_DEFAULT_COMMAND="kubectl get secrets" \
    fzf --info=inline --layout=reverse --header-lines=1 --height=80%\
        --prompt "$(kubectl config current-context | sed 's/-context$//')> " \
        --header $'/ CTRL-o (view secrets) ╱ CTRL-r (reload) ╱\n\n' \
        --bind 'ctrl-p:change-preview-window(80%,border-bottom|hidden|)' \
        --bind 'ctrl-o:execute:${EDITOR:-vi} <(kubectl get secret {1} -o go-template=$TEMPLATE ) > /dev/tty' \
        --bind 'ctrl-r:reload:kubectl get secrets' \
        --preview-window up:follow \
        --preview 'kubectl get secret {1} -o go-template=$TEMPLATE ' "$@"
}

cm() {
  FZF_DEFAULT_COMMAND="kubectl get cm" \
    fzf --info=inline --layout=reverse --header-lines=1 --height=80%\
        --prompt "$(kubectl config current-context | sed 's/-context$//')> " \
        --header $'/ CTRL-e (kubectl edit) ╱ CTRL-r (reload) ╱\n\n' \
        --bind 'ctrl-p:change-preview-window(80%,border-bottom|hidden|)' \
        --bind 'ctrl-e:execute:kubectl edit cm {1} > /dev/tty' \
        --bind 'ctrl-r:reload:kubectl get cm' \
        --preview-window up:follow \
        --preview 'kubectl get cm {1} -o yaml ' "$@"
}
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# The next line updates PATH for the Google Cloud SDK.
if [ -f $HOME/.local/lib/google-cloud-sdk/path.zsh.inc ]; then . $HOME/.local/lib/google-cloud-sdk/path.zsh.inc; fi

# The next line enables shell command completion for gcloud.
if [ -f $HOME/.local/lib/google-cloud-sdk/completion.zsh.inc ]; then . $HOME/.local/lib/google-cloud-sdk/completion.zsh.inc; fi

eval "$(zoxide init zsh)"
alias cdi="zi"
alias cd="z"

complete -C '/usr/local/bin/aws_completer' aws

alias man="tldr"
